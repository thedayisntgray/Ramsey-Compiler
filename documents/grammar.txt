<program> -> <toplvlstmts>
<toplvlstmts> -> <toplvlstmt> "\n" <toplvlstmtsA>

<toplvlstmtsA> -> <toplvlstmts>
	| e

<toplvlstmt> -> <stmts>
	| fun <ident> (<opt_params>) as <type> "\n" <fun_stmts> "\n" toss <expr> "\n" endfun 

<stmts> -> <stmt>
	| <stmt> "\n" <stmts>
<stmt> -> if (<boolexp>) "\n" <optional_stmts> "\n" endif
	| if (<boolexp>) "\n" <optional_stmts> "\n" else "\n" <optional_stmts> "\n" endif
	| if (<boolexp>) "\n" <optional_stmts> "\n" <elves> endif 
	| if (<boolexp>) "\n" <optional_stmts> "\n" <elves> else "\n" <optional_stmts> "\n" endif
	| while (<boolexp>) "\n" <optional_stmts> "\n" endwhile
	| <ident> < - <expr>
	| <type> <ident>
	| <type> <ident> < - <expr>
	| <expr>

<elves> -> elf (<boolexp>) "\n" <optional_stmts> "\n"
	| elf (<boolexp>) "\n" <optional_stmts> "\n" <elves>

<optional_stmts> -> e 
	| <stmts>

<fun_stmts> -> e 
	| <stmts>
	| toss <expr>

<opt_params> -> <params>
	| e

<params> -> <param> , <params> 
	| <param>
	
<param> -> <type> <ident>

<expr> -> <expr> <op> <expr>
	| <expr> <op> <ident>
	| <ident>
	| <literal>
	| (<expr>)

<boolexp> -> <boolexp> AND <boolexp>
	| <boolexp> OR <boolexp>
	| NOT <boolexp>
	| (<boolexp>)
	| <ident> <boolop> <boolexp>
	| <ident> <boolop> <expr>
	| <ident> <boolop> <ident>
	| <literal> <boolop> <ident>
	| <ident> <boolop> <literal>
	| <literal> <boolop> <literal>

<type> -> bool
	| in
	| small
	| big

<op> ->   +
	| -
	| *
	| /
	| %

<boolop> -> <
	| <=
	| =
	| >
	| >=
	| !=

<ident> -> from regex
	| (<type>) <ident>
	
<literal> -> from regex
